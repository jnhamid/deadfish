<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pipe_8h" kind="file" language="C++">
    <compoundname>pipe.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includedby refid="next__token_8c" local="yes">next_token.c</includedby>
    <includedby refid="pipe_8c" local="yes">pipe.c</includedby>
    <includedby refid="shell_8c" local="yes">shell.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="1">
        <label>pipe.h</label>
        <link refid="pipe_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>pipe.c</label>
        <link refid="pipe_8c"/>
      </node>
      <node id="1">
        <label>pipe.h</label>
        <link refid="pipe_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>next_token.c</label>
        <link refid="next__token_8c"/>
      </node>
      <node id="4">
        <label>shell.c</label>
        <link refid="shell_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcommand__line" prot="public">command_line</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="pipe_8h_1a2aa1c4d6ebe65030391ec3c6bb4a11e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void execute_pipeline</definition>
        <argsstring>(struct command_line *cmds)</argsstring>
        <name>execute_pipeline</name>
        <param>
          <type>struct <ref refid="structcommand__line" kindref="compound">command_line</ref> *</type>
          <declname>cmds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function that executes my pipeline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pipe.h" line="25" column="6" bodyfile="pipe.c" bodystart="53" bodyend="95" declfile="pipe.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pipe_8h_1ad7531bbd37c6c47aaebbb30356d3992d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tokenize</definition>
        <argsstring>(char *)</argsstring>
        <name>tokenize</name>
        <param>
          <type>char *</type>
          <defname>command</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function that tokenizes my commands</para>
<para>function that tokenize my commands </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pipe.h" line="30" column="6" bodyfile="pipe.c" bodystart="102" bodyend="130" declfile="pipe.h" declline="30" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Global stuff for pipes </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>_PIPE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PIPE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structcommand__line" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcommand__line" kindref="compound">command_line</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**tokens;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stdout_pipe;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stdout_file;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_8h_1a2aa1c4d6ebe65030391ec3c6bb4a11e2" kindref="member">execute_pipeline</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcommand__line" kindref="compound">command_line</ref><sp/>*cmds);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_8h_1ad7531bbd37c6c47aaebbb30356d3992d" kindref="member">tokenize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pipe.h"/>
  </compounddef>
</doxygen>
